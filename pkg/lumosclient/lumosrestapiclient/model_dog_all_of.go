/*
Sample API

Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.

API version: 0.1.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DogAllOf struct for DogAllOf
type DogAllOf struct {
	Bark bool `json:"bark"`
}

// NewDogAllOf instantiates a new DogAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDogAllOf(bark bool) *DogAllOf {
	this := DogAllOf{}
	this.Bark = bark
	return &this
}

// NewDogAllOfWithDefaults instantiates a new DogAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDogAllOfWithDefaults() *DogAllOf {
	this := DogAllOf{}
	return &this
}

// GetBark returns the Bark field value
func (o *DogAllOf) GetBark() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Bark
}

// GetBarkOk returns a tuple with the Bark field value
// and a boolean to check if the value has been set.
func (o *DogAllOf) GetBarkOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Bark, true
}

// SetBark sets field value
func (o *DogAllOf) SetBark(v bool) {
	o.Bark = v
}

func (o DogAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bark"] = o.Bark
	}
	return json.Marshal(toSerialize)
}

type NullableDogAllOf struct {
	value *DogAllOf
	isSet bool
}

func (v NullableDogAllOf) Get() *DogAllOf {
	return v.value
}

func (v *NullableDogAllOf) Set(val *DogAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDogAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDogAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDogAllOf(val *DogAllOf) *NullableDogAllOf {
	return &NullableDogAllOf{value: val, isSet: true}
}

func (v NullableDogAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDogAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


